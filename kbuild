#!/bin/bash
# Build script
set -e -u

SCRIPT_DIR="$( cd -P "$( dirname "$0" )" && pwd )"
CURRENT_DIR=`pwd`
_npm () {
  if [ -f package.json ];
  then
    if [ "$1" == 'dev' ];
    then
      npm install
      npm update
    elif [ "$1" == 'release' ];
    then
      npm install
    fi
  fi
}

_bower () {
  if [ -f bower.json ];
  then
    if [ "$1" == 'dev' ];
    then
      bower --config.interactive=false install
      bower --config.interactive=false update
    elif [ "$1" == 'release' ];
    then
      bower --config.interactive=false install
      bower --config.interactive=false update
    fi
  fi
}

_grunt () {
  if [ -f Gruntfile.js ];
  then
    if [ "$1" == 'dev' ];
    then
      grunt build-dev
    elif [ "$1" == 'release' ];
    then
      grunt build
    fi
  fi
}

_composer () {
  if [ -f composer.json ];
  then
    if [ "$1" == 'dev' ];
    then
      composer install -n --prefer-dist --ignore-platform-reqs
    elif [ "$1" == 'release' ];
    then
      composer install -n --no-dev -o --prefer-dist --ignore-platform-reqs
      find ./vendor/ -type d -name ".git" -exec rm -rf {} \;
    fi
  fi
}

_clean () {

  if [ -f package.json ];
  then
    find . -type d -name 'node_modules' -exec rm -rf "{}" \; 2>/dev/null || true
  fi

  if [ -f bower.json ];
  then
    find . -type d -name 'bower_components' -exec rm -rf "{}" \; 2>/dev/null || true
  fi

  if [ -d .sass-cache ];
  then
    rm -rf .sass-cache/ 2>/dev/null || true
  fi

}

_build () {
  fpm -s dir -t deb -a all -n $pkg_name --prefix $pkg_dir -v $version --inputs $pkg_install --deb-no-default-config-files
}

cd $CURRENT_DIR
if [[ $# != 0 && "$1" == '--dev' ]]
then
  _npm dev
  _bower dev
  _grunt dev
  _composer dev
elif [[ $# != 0 && "$1" == '--release' ]]
then
  _npm release
  _bower release
  _grunt release
  _composer release
  _clean
elif [[ $# != 0 && "$1" == '--build' ]]
then
  _build
else
  echo "Usage: $0 --dev | --release | --build"Â 
  exit 1
fi
cd $CURRENT_DIR
