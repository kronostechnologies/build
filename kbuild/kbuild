#!/bin/bash
# Build script
set -e -u

SCRIPT_DIR="$( cd -P "$( dirname "$0" )" && pwd )"
CURRENT_DIR=`pwd`

_npm () {
  if [ -f package.json ];
  then
    if [ "$1" == 'dev' ];
    then
      npm prune
      npm install
      npm update
    elif [ "$1" == 'release' ];
    then
      npm install
    fi
  fi
}

_bower () {
  if [ -f bower.json ];
  then
    if [ ! `which bower` ];
    then
      npm install -g bower
    fi

    if [ "$1" == 'dev' ];
    then
      bower --config.interactive=false prune
      bower --config.interactive=false install
      bower --config.interactive=false update
    elif [ "$1" == 'release' ];
    then
      bower --config.interactive=false install
      bower --config.interactive=false update
    fi
  fi
}

_grunt () {
  if [ -f Gruntfile.js ];
  then
    if [ ! `which grunt` ];
    then
      npm install -g grunt-cli
    fi

    if [ "$1" == 'dev' ];
    then
      grunt build-dev
    elif [ "$1" == 'release' ];
    then
      grunt build
    fi
  fi
}

_composer () {
  if [ -f composer.json ];
  then
    if [ "$1" == 'dev' ];
    then
      if [ -f composer.lock ] && [ $(grep composer\\.lock .gitignore) ]
      then
        composer update -n --prefer-dist --ignore-platform-reqs
      fi
      composer install -n --prefer-dist --ignore-platform-reqs
    elif [ "$1" == 'release' ];
    then
      composer install -n --no-dev -o --prefer-dist --ignore-platform-reqs || composer update -n --prefer-dist --no-dev -o --ignore-platform-reqs
    fi
  fi
}

_clean () {

  if [ -f package.json ];
  then
    find . -type d -name 'node_modules' -exec rm -rf "{}" \; 2>/dev/null || true
  fi

  if [ -f bower.json ];
  then
    find . -type d -name 'bower_components' -exec rm -rf "{}" \; 2>/dev/null || true
  fi

  if [ -d .sass-cache ];
  then
    rm -rf .sass-cache/ 2>/dev/null || true
  fi

}

if [[ $# != 0 && "$1" == '--dev' ]]
then
  cd $CURRENT_DIR
  _npm dev
  _bower dev
  _grunt dev
  _composer dev
  cd $CURRENT_DIR
elif [[ $# != 0 && "$1" == '--release' ]]
then
  cd $CURRENT_DIR
  _npm release
  _bower release
  _grunt release
  _composer release
  _clean
  cd $CURRENT_DIR
elif [[ $# != 0 && "$1" == '--release-tests' ]]
then
  cd $CURRENT_DIR
  _npm release
  _bower release
  _grunt release
  _composer dev
  _clean
  cd $CURRENT_DIR
elif [[ $# != 0 && "$1" == '--remove-tests' ]]
then
  _composer release
else
  echo "Usage: $0 --dev | --release | --release-tests | --remove-tests"
  exit 1
fi
